(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{446:function(a,t,e){"use strict";e.r(t);var s=e(5),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"python-개발-환경을-위한-pyenv-설치하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python-개발-환경을-위한-pyenv-설치하기"}},[a._v("#")]),a._v(" python 개발 환경을 위한 pyenv 설치하기")]),a._v(" "),t("h2",{attrs:{id:"pyenv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pyenv"}},[a._v("#")]),a._v(" pyenv?")]),a._v(" "),t("ul",[t("li",[a._v("Simple Python version management")]),a._v(" "),t("li",[a._v("프로젝트 별로 각각 맞는 다양한 python 버전으로 실행해 볼 수 있도록 환경 제공.")]),a._v(" "),t("li",[a._v("이 프로젝트에서는 python 2, 저 프로젝트에서는 python 3 일때!")]),a._v(" "),t("li",[a._v("github : "),t("a",{attrs:{href:"https://github.com/yyuu/pyenv",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/yyuu/pyenv"),t("OutboundLink")],1)])]),a._v(" "),t("h3",{attrs:{id:"환경"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#환경"}},[a._v("#")]),a._v(" 환경")]),a._v(" "),t("ul",[t("li",[a._v("OSX El Capitan (10.11)")]),a._v(" "),t("li",[a._v("Homebrew 0.9.9")])]),a._v(" "),t("h3",{attrs:{id:"설치-osx-기준으로-작성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#설치-osx-기준으로-작성"}},[a._v("#")]),a._v(" 설치 ( OSX 기준으로 작성 )")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ brew install pyenv\n")])])]),t("h3",{attrs:{id:"pyenv-업그레이드"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pyenv-업그레이드"}},[a._v("#")]),a._v(" pyenv 업그레이드")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ brew upgrade pyenv\n")])])]),t("h3",{attrs:{id:"path-설정"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path-설정"}},[a._v("#")]),a._v(" path 설정")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/yyuu/pyenv#basic-github-checkout",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/yyuu/pyenv#basic-github-checkout"),t("OutboundLink")],1)])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bash_profile\n$ echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bash_profile\n$ echo 'eval \"$(pyenv init -)\"' >> ~/.bash_profile\n$ source ~/.bash_profile\n")])])]),t("ul",[t("li",[a._v("각자 환경에 맞게 .bash_profile 대신 .bashrc 혹은 .zshrc 로 적용한다.")])]),a._v(" "),t("h3",{attrs:{id:"설치할-수-있는-목록-확인"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#설치할-수-있는-목록-확인"}},[a._v("#")]),a._v(" 설치할 수 있는 목록 확인")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ pyenv install --list\nAvailable versions:\n  2.1.3\n  2.2.3\n  2.3.7\n  2.4\n  2.4.1\n  2.4.2\n  2.4.3\n  2.4.4\n  2.4.5\n  2.4.6\n...\n")])])]),t("h3",{attrs:{id:"원하는-python-버전-설치"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#원하는-python-버전-설치"}},[a._v("#")]),a._v(" 원하는 python 버전 설치")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ pyenv install 3.6.0\npython-build: use openssl from homebrew\npython-build: use readline from homebrew\nDownloading Python-3.6.0.tar.xz...\n-> https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tar.xz\nInstalling Python-3.6.0...\n")])])]),t("ul",[t("li",[a._v("에러가 났다.. 힝")])]),a._v(" "),t("h3",{attrs:{id:"zipimport-zipimporterror-can-t-decompress-data-zlib-not-available"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zipimport-zipimporterror-can-t-decompress-data-zlib-not-available"}},[a._v("#")]),a._v(" zipimport.ZipImportError: can't decompress data; zlib not available")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Mac OS")]),a._v(" "),t("ol",[t("li",[a._v("xcode command line tools 설치 (참고 : https://github.com/yyuu/pyenv/issues/454)"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ xcode-select --install\n")])])])]),a._v(" "),t("li",[a._v("zlib 설치"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ brew install homebrew/dupes/zlib\n")])])])])])]),a._v(" "),t("li",[t("p",[a._v("Cent OS")]),a._v(" "),t("ol",[t("li",[a._v("zlib-devel")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ yum "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" zlib-devel\n")])])]),t("p",[a._v("https://slowcode.tistory.com/84")])])]),a._v(" "),t("h3",{attrs:{id:"modulenotfounderror-no-module-named-ctypes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#modulenotfounderror-no-module-named-ctypes"}},[a._v("#")]),a._v(" ModuleNotFoundError: No module named '_ctypes'")]),a._v(" "),t("ul",[t("li",[a._v("CentOS"),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" libffi-devel\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib"}},[a._v("#")]),a._v(" ERROR: The Python ssl extension was not compiled. Missing the OpenSSL lib?")]),a._v(" "),t("ol",[t("li",[a._v("만약 homebrew openssl과 pyenv를 함께 쓴다면, 아래와 같이 openssl package 위치를 알려주어야 한다. (환경에 따라 설정 방법이 다를 수 있으므로 아래의 방법이 안될 경우 "),t("a",{attrs:{href:"https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib",target:"_blank",rel:"noopener noreferrer"}},[a._v("링크"),t("OutboundLink")],1),a._v("를 참고해 주세요. )"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('$ CFLAGS="-I$(brew --prefix openssl)/include" \\\nLDFLAGS="-L$(brew --prefix openssl)/lib" \\\npyenv install -v 3.6.0\n')])])])])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Mac OS가 아닌 다른 Linux 계열의 경우,")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CFLAGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-I/usr/include/openssl \n$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LDFLAGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-L/usr/lib64 \n$ pyenv "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.6")]),a._v(".0\n")])])])])]),a._v(" "),t("p",[a._v("설치 성공하면 다음과 같이 나온다.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Installed Python-3.6.0 to /Users/jiyeonseo/.pyenv/versions/3.6.0\n")])])]),t("h3",{attrs:{id:"설치된-pyenv-확인"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#설치된-pyenv-확인"}},[a._v("#")]),a._v(" 설치된 pyenv 확인")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ pyenv versions\n* system (set by /root/.pyenv/version)\n  2.7.11\n  3.6.0\n")])])]),t("h2",{attrs:{id:"둘러보기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#둘러보기"}},[a._v("#")]),a._v(" 둘러보기")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ pyenv help\nUsage: pyenv <command> [<args>]\n\nSome useful pyenv commands are:\n   commands    List all available pyenv commands\n   local       Set or show the local application-specific Python version\n   global      Set or show the global Python version\n   shell       Set or show the shell-specific Python version\n   install     Install a Python version using python-build\n   uninstall   Uninstall a specific Python version\n   rehash      Rehash pyenv shims (run this after installing executables)\n   version     Show the current Python version and its origin\n   versions    List all Python versions available to pyenv\n   which       Display the full path to an executable\n   whence      List all Python versions that contain the given executable\n\nSee `pyenv help <command>' for information on a specific command.\nFor full documentation, see: https://github.com/yyuu/pyenv#readme\n")])])]),t("h3",{attrs:{id:"바로-써보자"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#바로-써보자"}},[a._v("#")]),a._v(" 바로 써보자")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ python -V\nPython 2.7.11 ## 원래 버전\n$ pyenv shell 3.6.0 ## 바꿔보자\n$ python3.6 --version\nPython 3.6.2+ ## 바뀐 버전\n")])])]),t("p",[a._v("더 다양한 commend이 이 "),t("a",{attrs:{href:"https://github.com/pyenv/pyenv/blob/master/COMMANDS.md#pyenv-commands",target:"_blank",rel:"noopener noreferrer"}},[a._v("링크"),t("OutboundLink")],1),a._v(" 에서 확인 가능하다.")]),a._v(" "),t("h1",{attrs:{id:"virtualenv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#virtualenv"}},[a._v("#")]),a._v(" virtualenv")]),a._v(" "),t("ul",[t("li",[a._v("이번엔 python 프로젝트마다 각각의 가상환경을 만들어 줄 수 있는 virtualenv를 설치해 보겠다.")])]),a._v(" "),t("h3",{attrs:{id:"설치하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#설치하기"}},[a._v("#")]),a._v(" 설치하기")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ brew install pyenv-virtualenv\n$ echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bash_profile\n")])])]),t("h3",{attrs:{id:"가상환경-만들기-시작하기-activate-끝내기-deactivate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#가상환경-만들기-시작하기-activate-끝내기-deactivate"}},[a._v("#")]),a._v(" 가상환경 만들기, 시작하기(activate), 끝내기(deactivate)")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ pyenv virtualenv 2.7.11 {환경명} ## 만들기\n$ pyenv activate ## 시작하기\n...\n(test_env) $ python -V\nPython 2.7.11\n(test_env) $ pyenv deactivate ## 끝내기\npyenv-virtualenv: deactivate {환경명}\n")])])]),t("h3",{attrs:{id:"가상환경-목록보기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#가상환경-목록보기"}},[a._v("#")]),a._v(" 가상환경 목록보기")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ pyenv virtualenvs\n")])])]),t("h3",{attrs:{id:"가상환경-삭제하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#가상환경-삭제하기"}},[a._v("#")]),a._v(" 가상환경 삭제하기")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ pyenv uninstall {환경명}\n")])])]),t("h1",{attrs:{id:"autoenv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#autoenv"}},[a._v("#")]),a._v(" autoenv")]),a._v(" "),t("ul",[t("li",[a._v("Python 프로젝트 진입시점시에 자동으로 virtualenv 환경을 로딩.")])]),a._v(" "),t("h3",{attrs:{id:"autoenv-설치"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#autoenv-설치"}},[a._v("#")]),a._v(" autoenv 설치")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ brew install autoenv\nTo finish the installation, source activate.sh in your shell:\n  source /usr/local/opt/autoenv/activate.sh\n...\n...\n\n$ echo 'source /usr/local/opt/autoenv/activate.sh' >> ~/.bash_profile ## 위에 나온 shell\n")])])]),t("h3",{attrs:{id:"프로젝트에-맞게-env-설정"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#프로젝트에-맞게-env-설정"}},[a._v("#")]),a._v(" 프로젝트에 맞게 env 설정")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ vi .env\npyenv activate {환경명}\n")])])]),t("ul",[t("li",[a._v("설정 후 프로젝트로 들어오면")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("autoenv:\nautoenv: WARNING:\nautoenv: This is the first time you are about to source {local path}/.env:\nautoenv:\nautoenv:     --- (begin contents) ---------------------------------------\nautoenv:     pyenv activate {환경명}\nautoenv:     --- (end contents) -----------------------------------------\nautoenv:\nautoenv: Are you sure you want to allow this? (y/N) y\n")])])]),t("p",[a._v("위와 같이 바로 적용된다.")])])}),[],!1,null,null,null);t.default=n.exports}}]);