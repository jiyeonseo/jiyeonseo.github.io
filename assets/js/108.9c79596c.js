(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{522:function(t,e,a){"use strict";a.r(e);var s=a(5),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"k8s-node-스케쥴링-taint-cordon-drain"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k8s-node-스케쥴링-taint-cordon-drain"}},[t._v("#")]),t._v(" [K8S] Node 스케쥴링 - taint/cordon/drain")]),t._v(" "),e("h2",{attrs:{id:"이슈-상황-및-해결"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#이슈-상황-및-해결"}},[t._v("#")]),t._v(" 이슈 상황 및 해결")]),t._v(" "),e("p",[t._v("갑자기 application이 안된다고 연락이 와서 후다닥 pod들을 확인하였더니 다 "),e("code",[t._v("Pending")]),t._v(" 상태로 멈춰있는 것을 확인했다. (진리의 껏키) 재배포를 시도하였으나, Pod이 "),e("code",[t._v("Terminating")]),t._v("도 아니고 그대로 쭉 "),e("code",[t._v("Pending")]),t._v("으로 멈춰있는 상태. "),e("code",[t._v("kubectl describe pod <pod 이름>")]),t._v(" 해보니 아래와 같은 상태로 멈춰있었다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Type Reason Age From Message\n\n---- ------ ---- ---- -------\n\nWarning FailedScheduling 66s (x31 over 46m) default-scheduler 0/20 nodes are available: 17 node(s) were unschedulable, 3 node(s) had taints that the pod didn't tolerate.\n")])])]),e("p",[t._v("가능한 노드가 없다. "),e("code",[t._v("kubectl get nodes")]),t._v("로 노드 상태를 확인해보았다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("\nNAME STATUS ROLES AGE VERSION\n\ncluster-e1 Ready controlplane,etcd 204d v1.14.6\n\ncluster-e2 Ready controlplane,etcd 204d v1.14.6\n\ncluster-e3 Ready controlplane,etcd 204d v1.14.6\n\ncluster-w1 Ready,SchedulingDisabled worker 417d v1.14.6\n\ncluster-w2 Ready,SchedulingDisabled worker 417d v1.14.6\n\ncluster-w3 Ready,SchedulingDisabled worker 417d v1.14.6\n\n")])])]),e("p",[t._v("worker node들이 모두 "),e("code",[t._v("SchedulingDisabled")]),t._v(" 상태임을 확인했다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ kubectl uncordon "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v(" node-role.kubernetes.io/worker"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n")])])]),e("p",[t._v("worker node들에 대하여 "),e("code",[t._v("uncordon")]),t._v(" 해주었고, "),e("code",[t._v("pending")]),t._v(" 은 자연스럽게 풀리면서 정상화 되었다.")]),t._v(" "),e("h2",{attrs:{id:"쿠버네티스-스케쥴링"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#쿠버네티스-스케쥴링"}},[t._v("#")]),t._v(" 쿠버네티스 스케쥴링")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/2231510/175758120-7027210d-1435-47a6-a681-d2fb56889513.png",alt:"스크린샷 2022-06-25 오후 1 34 46"}}),t._v("\n(ref: "),e("a",{attrs:{href:"http://www.yes24.com/Product/Goods/93765519",target:"_blank",rel:"noopener noreferrer"}},[t._v("시작하세요!도커/쿠버네티스"),e("OutboundLink")],1),t._v(")")]),t._v(" "),e("ul",[e("li",[t._v("pod 생성시 어느 노드에 생성할 것인지 결정하는 일")]),t._v(" "),e("li",[t._v("노드 필터링/ 노드 스코어링을 통해 최종적으로 어느 노드에 생성할 지 결정.\n"),e("ul",[e("li",[t._v("노드 필터링 : 할당 가능한지 아닌지. 가용 자원지 충분한 조건인지. "),e("code",[t._v("kubectl get nodes")]),t._v(" 에서 STATUS가 Ready 인지 등")]),t._v(" "),e("li",[t._v("노드 스코어링 : 쿠버네티스의 알고리즘 가중치에 따라 매겨짐. 도커 이미지가 이미 노드에 존재 하는지, 가용 자원이 많은 지 등")])])])]),t._v(" "),e("h2",{attrs:{id:"nodename-nodeselector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodename-nodeselector"}},[t._v("#")]),t._v(" nodeName, nodeSelector")]),t._v(" "),e("p",[t._v("Pod YAML에 어느 노드에 띄울 것인지 지정하면 스케쥴링에 의해서가 아니라 "),e("strong",[t._v("특정 워커 노드에 할당")]),t._v("되게 만들 수 있다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ kubectl get nodes "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# node 이름 확인")]),t._v("\n\nNAME STATUS ROLES AGE VERSION\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\ncluster-w1 Ready worker 417d v1.14.6\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("w1\n")])])]),e("p",[t._v("하지만 이렇게 하면 유연성에 좋지 못함. 그 노드가 잘못 되면?! 대신 라벨(Label)을 사용해 볼 수 있음.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# label과 함께 node들 확인")]),t._v("\n$ kubectl get nodes --show-labels\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# node에 label 추가하기 ")]),t._v("\n$ kubectl label nodes "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("label"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ kubectl label nodes cluster-w1 mylabel/disk"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hdd\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mylabel/disk")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hdd\n")])])]),e("ul",[e("li",[t._v("쿠버네티스 클러스터 운영시에 특정 노드에 문제가 생겨서 빼야한다던가 pod들을 이사 시키는 등 pod들이 특정 노드에 스케쥴링 되지 않도록 제한을 걸어 주어야 할 때가 있음. 이때 "),e("code",[t._v("taint")]),t._v(", "),e("code",[t._v("cordon")]),t._v(", "),e("code",[t._v("drain")]),t._v(" 등을 사용하여 운영.")])]),t._v(" "),e("h2",{attrs:{id:"taint-toleration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#taint-toleration"}},[t._v("#")]),t._v(" taint, toleration")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("taint")]),t._v(" 는 특정 노드에 '얼룩'을 지정하여 해당 노드에 pod가 할당 되는 것을 막는 것.")]),t._v(" "),e("li",[e("code",[t._v("taint")]),t._v(" 가 되어있는 노드이지만 "),e("code",[t._v("용인")]),t._v("(toleration)된 pod은 할당이 가능하다.")]),t._v(" "),e("li",[e("code",[t._v("taint")]),t._v("는 노드 별로 설정 될 수도 있고, 특정 이벤트에 따라 쿠버네티스에서 자동으로 설정하기도 함.\n"),e("ul",[e("li",[t._v("기본적으로 마스터 노드는 pod이 할당되지 않도록 taint 설정되어있음.")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl describe node cluster-e1 \n\n...\nTaints:             node-role.kubernetes.io/master:NoSchedule\nUnschedulable:      false # 스케쥴링 대상이 되는 노드다\n...\n\n")])])])]),t._v(" "),e("li",[t._v("taint 설정은 라벨과 비슷하게 키=값 형태로 설정\n"),e("ul",[e("li",[t._v("다른점 : 뒤에 "),e("code",[t._v(":effect")]),t._v("가 붙음")]),t._v(" "),e("li",[e("code",[t._v("NoSchedule")]),t._v(" : pod 스케쥴링 하지 않음")]),t._v(" "),e("li",[e("code",[t._v("NoExcute")]),t._v(" : pod 실행 허용하지 않음")]),t._v(" "),e("li",[e("code",[t._v("PreferNoSchedule")]),t._v(" : 가능하면 스케쥴링하지 않음")])])])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ kubectl taint "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("노드 이름"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value:effect"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ kubectl taint "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" cluster-w1 cheese/taint"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dirty:NoSchedule\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taint 삭제 ")]),t._v("\n$ kubectl taint "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("노드 이름"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("key:effect-"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("만약, 이 node에 특정 pod을 용인(toleration) 해주려면 다음과 같이 yaml을 작성")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cheese/taint\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dirty\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Equal   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cheese/taint 값이 dirty 이며")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NoSchedule    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Taint effect가 NoSchedule 인 경우 용인한다.   ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\n")])])]),e("ul",[e("li",[t._v("node 할당을 "),e("strong",[t._v("용인")]),t._v(" 한다는거지, 반드시 저 노드에 할당 된다는 뜻 X")])]),t._v(" "),e("h2",{attrs:{id:"cordon-uncordon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cordon-uncordon"}},[t._v("#")]),t._v(" cordon, uncordon")]),t._v(" "),e("ul",[e("li",[t._v("위와 동일하게 스케쥴링 되는 것을 막는 방법. 다만 좀 더 명시적으로.")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ kubectl cordon "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("노드 이름"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ kubectl cordon cluster-w1\n\n$ kubectl get nodes\nNAME STATUS ROLES AGE VERSION\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\ncluster-w1 Ready,SchedulingDisabled worker 417d v1.14.6\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n$ kubectl describe "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" cluster-w1\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nTaints:             node.kubernetes.io/unschedulable:NoSchedule\nUnschedulable:      "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 스케쥴링 대상이 안된다. ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n")])])]),e("ul",[e("li",[t._v("이미 해당 노드에 실행중인 pod은 종료되지는 않음.")]),t._v(" "),e("li",[t._v("다시 스케쥴링 대상으로 넣으려면 아래와 같이 "),e("code",[t._v("uncordon")]),t._v(" 할 수 있음.")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ kubectl uncordon "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("노드 이름"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ kubectl uncordon cluster-w1\n\n$ kubectl get nodes\nNAME STATUS ROLES AGE VERSION\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\ncluster-w1 Ready worker 417d v1.14.6\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),e("h2",{attrs:{id:"drain"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#drain"}},[t._v("#")]),t._v(" drain")]),t._v(" "),e("ul",[e("li",[t._v("cordon과 비슷. 노드에서 "),e("strong",[t._v("기존 실행 중인 pod를 다른 노드로 옮겨가도록 퇴거(eviction) 수행.")])])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ kubectl drain "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("노드 이름"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ kubectl drain cluster-w1\n\n$ kubectl get nodes\nNAME STATUS ROLES AGE VERSION\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\ncluster-w1 Ready,SchedulingDisabled worker 417d v1.14.6\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n")])])]),e("ul",[e("li",[e("p",[t._v("만약 노드에 데몬셋으로 실행된 pod이 있으면 drain은 실패함.")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("--ignore-daemonsets=true")]),t._v(" 옵션을 주면 무시함.")])])]),t._v(" "),e("li",[e("p",[t._v("pod은 graceful 하게 종료 및 삭제.")]),t._v(" "),e("ul",[e("li",[t._v("kubelet을 통해 직접 실행된 "),e("a",{attrs:{href:"https://kubernetes.io/ko/docs/tasks/configure-pod-container/static-pod/",target:"_blank",rel:"noopener noreferrer"}},[t._v("static pod"),e("OutboundLink")],1),t._v(" 들은 drain을 통해 삭제되지 않는다.")])])])]),t._v(" "),e("p",[t._v("더 자세한 내용은 "),e("a",{attrs:{href:"https://kubernetes.io/ko/docs/concepts/scheduling-eviction/kube-scheduler/",target:"_blank",rel:"noopener noreferrer"}},[t._v("쿠버네티스 스케쥴러 문서"),e("OutboundLink")],1),t._v("를 참고할 수 있다.")]),t._v(" "),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://arisu1000.tistory.com/27845",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://arisu1000.tistory.com/27845"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://arisu1000.tistory.com/27846?category=787056",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://arisu1000.tistory.com/27846?category=787056"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://velog.io/@koo8624/Kubernetes-Drain-Cordon-and-Uncordon",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://velog.io/@koo8624/Kubernetes-Drain-Cordon-and-Uncordon"),e("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=n.exports}}]);